@model ProjektASPNET.ViewModel.ItemViewModel
@{ ViewBag.Title = "Edit"; }

<h2>Index</h2>

<script type="text/javascript">$(document).ready(function() {
       
        $("#btnChange").click(function () {
            ChangeItem();
        });
    });

    function ResetItem() {
        $("#CategoryId").val("1");
        $("#SubcategoryId").val("1");
        /* $("#ItemId").val("1");*/
        $("#ItemCode").val("");
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ItemPrice").val("");
        $("#ImagePath").val("");
    }

   

        function ChangeItem() {
            var formData = new FormData();
            formData.append("ItemId", $("#ItemId").val());
            formData.append("CategoryId", $("#CategoryId").val());
            formData.append("SubcategoryId", $("#SubcategoryId").val());
            formData.append("ItemCode", $("#ItemCode").val());
            formData.append("ItemName", $("#ItemName").val());
            formData.append("Description", $("#Description").val());
            formData.append("ItemPrice", $("#ItemPrice").val());
            formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

            $.ajax({
                async: true,
                dataType: 'JSON',
                type: 'POST',
                contentType: false,
                processData: false,
                url: '/Item/Edit',
                data: formData,
                success: function (data) {
                    if (data.Success) {
                        alert(data.Message);
                        ResetItem();
                    }
                },
                error: function () {
                    alert("There is some problem to edit Item.");
                }
            });
    }</script>

<div class="container">

    <div class="col-md-4">
        <div class="form-group">
            Id :
            @Html.DropDownListFor(model => model.ItemId, new SelectList(Model.ItemIdSelectListItem, "Value", "Text"),
                                       new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Subcategory :
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategorySelectListItem, "Value", "Text"),
                                    new { @class = "form-control" })
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            Category :
            @Html.DropDownListFor(model => model.SubcategoryId, new SelectList(Model.SubCategorySelectListItem, "Value", "Text"),
                                    new { @class = "form-control" })
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            Item Code :
            @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Name :
            @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Description :
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ItemPrice, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ImagePath, new { type = "file", @class = "form-control" })
        </div>
    </div>

    <div>

        <input type="button" value="Change" name="change" class="btn btn-primary" id="btnChange" />
        &nbsp;

    </div>
</div>

